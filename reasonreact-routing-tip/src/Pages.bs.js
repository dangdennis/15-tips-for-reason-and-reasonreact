// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Link$ReactTemplate = require("./Link.bs.js");

function str(prim) {
  return prim;
}

function reducer(route, _) {
  return /* Update */Block.__(0, [/* record */[/* route */route]]);
}

function urlToRoute(url) {
  var match = url[/* path */0];
  if (match) {
    switch (match[0]) {
      case "" : 
      case "/" : 
          if (match[1]) {
            return /* NotFound */5;
          } else {
            return /* Home */0;
          }
      case "auth" : 
          var match$1 = match[1];
          if (match$1 && !match$1[1]) {
            return /* WildCardPage */[match$1[0]];
          } else {
            return /* NotFound */5;
          }
      case "nested" : 
          var match$2 = match[1];
          if (match$2 && match$2[0] === "page4" && !match$2[1]) {
            return /* Page4 */4;
          } else {
            return /* NotFound */5;
          }
      case "page1" : 
          if (match[1]) {
            return /* NotFound */5;
          } else {
            return /* Page1 */1;
          }
      case "page2" : 
          if (match[1]) {
            return /* NotFound */5;
          } else {
            return /* Page2 */2;
          }
      case "page3" : 
          if (match[1]) {
            return /* NotFound */5;
          } else {
            return /* Page3 */3;
          }
      default:
        return /* NotFound */5;
    }
  } else {
    return /* Home */0;
  }
}

var component = ReasonReact.reducerComponent("App");

function make() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              var watchId = ReasonReact.Router[/* watchUrl */1]((function (url) {
                      var match = url[/* path */0];
                      var tmp;
                      if (match) {
                        switch (match[0]) {
                          case "" : 
                          case "/" : 
                              tmp = match[1] ? /* NotFound */5 : /* Home */0;
                              break;
                          case "auth" : 
                              var match$1 = match[1];
                              tmp = match$1 && !match$1[1] ? /* WildCardPage */[match$1[0]] : /* NotFound */5;
                              break;
                          case "nested" : 
                              var match$2 = match[1];
                              tmp = match$2 && match$2[0] === "page4" && !match$2[1] ? /* Page4 */4 : /* NotFound */5;
                              break;
                          case "page1" : 
                              tmp = match[1] ? /* NotFound */5 : /* Page1 */1;
                              break;
                          case "page2" : 
                              tmp = match[1] ? /* NotFound */5 : /* Page2 */2;
                              break;
                          case "page3" : 
                              tmp = match[1] ? /* NotFound */5 : /* Page3 */3;
                              break;
                          default:
                            tmp = /* NotFound */5;
                        }
                      } else {
                        tmp = /* Home */0;
                      }
                      return Curry._1(self[/* send */3], tmp);
                    }));
              return Curry._1(self[/* onUnmount */4], (function () {
                            return ReasonReact.Router[/* unwatchUrl */2](watchId);
                          }));
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var match = self[/* state */1][/* route */0];
              var tmp;
              if (typeof match === "number") {
                switch (match) {
                  case 0 : 
                      tmp = React.createElement("h1", undefined, "You've reached the home page");
                      break;
                  case 1 : 
                      tmp = React.createElement("h1", undefined, "You've reached page 1");
                      break;
                  case 2 : 
                      tmp = React.createElement("h1", undefined, "You've reached page 2");
                      break;
                  case 3 : 
                      tmp = React.createElement("h1", undefined, "You've reached page 3");
                      break;
                  case 4 : 
                      tmp = React.createElement("h1", undefined, "You've reached page 4");
                      break;
                  case 5 : 
                      tmp = React.createElement("h1", undefined, "404 Page");
                      break;
                  
                }
              } else {
                tmp = React.createElement("h1", undefined, "You've reached auth wild card: " + match[0]);
              }
              return React.createElement("div", undefined, React.createElement("ul", undefined, React.createElement("li", undefined, ReasonReact.element(undefined, undefined, Link$ReactTemplate.make("/", /* array */["Home"]))), React.createElement("li", undefined, ReasonReact.element(undefined, undefined, Link$ReactTemplate.make("/page1", /* array */["Page 1"]))), React.createElement("li", undefined, ReasonReact.element(undefined, undefined, Link$ReactTemplate.make("/page2", /* array */["Page 2"]))), React.createElement("li", undefined, ReasonReact.element(undefined, undefined, Link$ReactTemplate.make("/page3", /* array */["Page 3"]))), React.createElement("li", undefined, ReasonReact.element(undefined, undefined, Link$ReactTemplate.make("/nested/page4", /* array */["Nested Page"]))), React.createElement("li", undefined, ReasonReact.element(undefined, undefined, Link$ReactTemplate.make("/auth/*", /* array */["Wild Card Auth Page"])))), React.createElement("div", undefined, tmp));
            }),
          /* initialState */(function () {
              return /* record */[/* route : Home */0];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */reducer,
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.str = str;
exports.reducer = reducer;
exports.urlToRoute = urlToRoute;
exports.component = component;
exports.make = make;
/* component Not a pure module */
